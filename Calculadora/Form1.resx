<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAC5AAAA/wAAAP0AAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD9AAAA/wAA
        AGIAAAAAAAAAAAAAAGIAAAD/AAAA/QAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAA
        AP0AAAD/AAAAuQAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAAD/AAAAqAAAAAAAAAAAAAAAqAAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA/AAAAP8AAADiAAAApAAAAKoAAACpAAAAqQAAAKkAAACpAAAAqQAA
        AKcAAACvAAAA9gAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAPYAAACvAAAApwAAAKkAAACpAAAAqQAA
        AKkAAACpAAAAqgAAAKQAAADiAAAA/wAAAPwAAAD7AAAA/wAAAKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAABEAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAAABEAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKkAAAD/AAAA+wAAAPsAAAD/AAAAqgAAAAAAAAAHAAAAAwAA
        AAMAAAADAAAAAwAAAAQAAAAAAAAAFAAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAAAP8AAADqAAAAFAAA
        AAAAAAAEAAAAAwAAAAMAAAADAAAAAwAAAAcAAAAAAAAAqgAAAP8AAAD7AAAA+wAAAP8AAACpAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAA
        AOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACpAAAA/wAAAPsAAAD7AAAA/wAA
        AKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABEAAADqAAAA/wAAAKgAAAAAAAAAAAAA
        AKgAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKkAAAD/AAAA+wAA
        APsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAA
        AAAAAAAAAAAAqAAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAqQAA
        AP8AAAD7AAAA+wAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAA
        AP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAACpAAAA/wAAAPsAAAD7AAAA/wAAAKkAAAAAAAAABAAAAAEAAAABAAAAAQAAAAEAAAACAAAAAAAA
        ABIAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAAABIAAAAAAAAAAgAAAAEAAAABAAAAAQAA
        AAEAAAAEAAAAAAAAAKkAAAD/AAAA+wAAAPsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAqQAAAP8AAAD7AAAA+wAAAP8AAACvAAAAAwAAABQAAAARAAAAEQAA
        ABEAAAARAAAAEgAAAA0AAAAiAAAA6wAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAOsAAAAiAAAADQAA
        ABIAAAARAAAAEQAAABEAAAARAAAAFAAAAAMAAACvAAAA/wAAAPsAAAD8AAAA/AAAAPYAAADpAAAA6gAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOsAAAD3AAAA/wAAAKkAAAAAAAAAAAAAAKkAAAD/AAAA9wAA
        AOsAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6QAAAPYAAAD8AAAA/AAAAPgAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAoAAAAAAAAAAAAAAAoAAA
        AP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD4AAAAYwAA
        AK0AAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqgAAAKYAAAAsAAAAAAAA
        AAAAAAAsAAAApgAAAKoAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAArQAA
        AGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAAAK0AAACoAAAAqAAAAKgAAACoAAAAqAAAAKgAAACoAAAAqAAA
        AKgAAACoAAAAqgAAAKYAAAAsAAAAAAAAAAAAAAAsAAAApgAAAKoAAACoAAAAqAAAAKgAAACoAAAAqAAA
        AKgAAACoAAAAqAAAAKgAAACoAAAArQAAAGMAAAD4AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAKAAAAAAAAAAAAAAAKAAAAD/AAAA+wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+AAAAPwAAAD8AAAA9gAAAOkAAADqAAAA6gAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA6wAAAPcAAAD/AAAAqQAAAAAAAAAAAAAAqQAAAP8AAAD3AAAA6wAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADpAAAA9gAAAPwAAAD8AAAA+wAAAP8AAACvAAAAAwAA
        ABQAAAARAAAAEQAAABEAAAARAAAAEgAAAA0AAAAiAAAA6wAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAA
        AOsAAAAiAAAADQAAABIAAAARAAAAEQAAABEAAAARAAAAFAAAAAMAAACvAAAA/wAAAPsAAAD7AAAA/wAA
        AKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABEAAADqAAAA/wAAAKgAAAAAAAAAAAAA
        AKgAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKkAAAD/AAAA+wAA
        APsAAAD/AAAAqQAAAAAAAAAEAAAAAQAAAAEAAAABAAAAAQAAAAIAAAAAAAAAEgAAAOoAAAD/AAAAqAAA
        AAAAAAAAAAAAqAAAAP8AAADqAAAAEgAAAAAAAAACAAAAAQAAAAEAAAABAAAAAQAAAAQAAAAAAAAAqQAA
        AP8AAAD7AAAA+wAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAARAAAA6gAA
        AP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAACpAAAA/wAAAPsAAAD7AAAA/wAAAKkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAKkAAAD/AAAA+wAAAPsAAAD/AAAAqQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAqQAAAP8AAAD7AAAA+wAAAP8AAACpAAAAAAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAARAAAA6gAAAP8AAACoAAAAAAAAAAAAAACoAAAA/wAAAOoAAAARAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACpAAAA/wAAAPsAAAD7AAAA/wAAAKoAAAAAAAAABwAA
        AAMAAAADAAAAAwAAAAMAAAAEAAAAAAAAABQAAADqAAAA/wAAAKgAAAAAAAAAAAAAAKgAAAD/AAAA6gAA
        ABQAAAAAAAAABAAAAAMAAAADAAAAAwAAAAMAAAAHAAAAAAAAAKoAAAD/AAAA+wAAAPsAAAD/AAAAqQAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEQAAAOoAAAD/AAAAqAAAAAAAAAAAAAAAqAAA
        AP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAqQAAAP8AAAD7AAAA/AAA
        AP8AAADiAAAApAAAAKoAAACpAAAAqQAAAKkAAACpAAAAqQAAAKcAAACvAAAA9gAAAP8AAACoAAAAAAAA
        AAAAAACoAAAA/wAAAPYAAACvAAAApwAAAKkAAACpAAAAqQAAAKkAAACpAAAAqgAAAKQAAADiAAAA/wAA
        APwAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAA
        AKgAAAAAAAAAAAAAAKgAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAALkAAAD/AAAA/QAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAA
        AP0AAAD/AAAAYgAAAAAAAAAAAAAAYgAAAP8AAAD9AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAA
        APsAAAD7AAAA/QAAAP8AAAC5AAGAAAABgAAAAYAAE6GFyBAhhAgQIYQIE6GFyBOhhcgToYXIECGECBOh
        hcgAAYAAAAGAAAABgAAAAYAAX/Qv+l/0L/oAAYAAAAGAAAABgAAAAYAAE6GFyBAhhAgToYXIE6GFyBOh
        hcgQIYQIECGECBOhhcgAAYAAAAGAAAABgAA=
</value>
  </data>
</root>